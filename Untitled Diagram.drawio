<mxfile host="app.diagrams.net" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36" version="26.2.13">
  <diagram name="Page-1" id="kHwdLyBV5pop8FvYFpwH">
    <mxGraphModel dx="1428" dy="783" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" background="light-dark(#FFFFFF,#FFFFFF)" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="PVdDav53qMYlW7E-gHQP-3" value="&lt;font style=&quot;font-size: 45px; color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;&lt;b&gt;DIY AUTOML&lt;/b&gt;&lt;/font&gt;&lt;div&gt;&lt;font style=&quot;font-size: 45px; color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;&lt;b&gt;PLATFORM&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=light-dark(#FFFFFF,#FFFFFF);strokeWidth=2;strokeColor=light-dark(#000000,#000000);" vertex="1" parent="1">
          <mxGeometry x="40" y="65" width="360" height="150" as="geometry" />
        </mxCell>
        <mxCell id="PVdDav53qMYlW7E-gHQP-6" value="&lt;font style=&quot;font-size: 20px; color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;&lt;b&gt;PROJECT REPORT&lt;/b&gt;&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="577" y="10" width="250" height="40" as="geometry" />
        </mxCell>
        <mxCell id="PVdDav53qMYlW7E-gHQP-7" value="&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;Introduction&lt;/font&gt;&lt;/h1&gt;&lt;div&gt;&lt;p class=&quot;&quot; data-end=&quot;635&quot; data-start=&quot;23&quot;&gt;&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;In today’s data-driven landscape, businesses generate substantial volumes of structured information—from daily sales figures and customer feedback to inventory levels and website analytics. Yet many organizations lack the technical expertise or resources to harness machine learning effectively. The DIY AutoML Platform addresses this gap by providing a lightweight, web‑based solution that automates the end‑to‑end workflow: from exploratory data analysis (EDA) and model recommendation to training, prediction, and interpretability—all without relying on high‑level libraries like scikit‑learn or TensorFlow.&lt;/font&gt;&lt;/p&gt;&lt;p class=&quot;&quot; data-end=&quot;1268&quot; data-start=&quot;637&quot;&gt;&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;By building core algorithms from first principles (e.g., normal equations for linear regression, entropy‑based splits for decision trees, and backpropagation for neural networks), the platform not only offers transparency into each computational step but also fosters deeper understanding of the underlying mathematics. Users can simply upload a CSV, select their target variable, and let the system intelligently recommend and train the best‑fit model. Rich visualizations and custom feature‑importance metrics then clarify why the model makes certain predictions, empowering users to make data‑backed decisions with confidence.&lt;/font&gt;&lt;/p&gt;&lt;p class=&quot;&quot; data-end=&quot;1663&quot; data-start=&quot;1270&quot;&gt;&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;This report details the system’s architecture, core components, and implementation strategies, illustrating how a math‑first AutoML engine can be both accessible and powerful for non‑technical stakeholders. The following sections will explore the platform’s design, algorithmic foundations, and real‑world use cases, culminating in a discussion of potential enhancements and future directions.&lt;/font&gt;&lt;/p&gt;&lt;/div&gt;" style="text;html=1;whiteSpace=wrap;overflow=hidden;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="40" y="240" width="760" height="280" as="geometry" />
        </mxCell>
        <mxCell id="PVdDav53qMYlW7E-gHQP-8" value="&lt;font style=&quot;font-size: 24px; color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;&lt;b&gt;Core Components&lt;/b&gt;&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="40" y="520" width="220" height="70" as="geometry" />
        </mxCell>
        <mxCell id="PVdDav53qMYlW7E-gHQP-11" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;strokeColor=light-dark(#000000,#000000);" edge="1" parent="1" source="PVdDav53qMYlW7E-gHQP-9" target="PVdDav53qMYlW7E-gHQP-10">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="230" y="620" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="PVdDav53qMYlW7E-gHQP-9" value="&lt;font style=&quot;font-size: 17px; color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;&lt;b&gt;Frontend&lt;/b&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=light-dark(#FFFFFF,#FFFFFF);strokeWidth=2;strokeColor=light-dark(#000000,#000000);" vertex="1" parent="1">
          <mxGeometry x="40" y="590" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="PVdDav53qMYlW7E-gHQP-38" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;strokeColor=light-dark(#000000,#000000);" edge="1" parent="1" source="PVdDav53qMYlW7E-gHQP-10" target="PVdDav53qMYlW7E-gHQP-37">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="PVdDav53qMYlW7E-gHQP-10" value="&lt;font style=&quot;font-size: 17px; color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;&lt;b&gt;ML Engine&lt;/b&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;strokeColor=light-dark(#000000,#000000);strokeWidth=2;fillColor=light-dark(#FFFFFF,#FFFFFF);" vertex="1" parent="1">
          <mxGeometry x="240" y="590" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="PVdDav53qMYlW7E-gHQP-14" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=1;entryDx=0;entryDy=0;strokeColor=light-dark(#000000,#000000);" edge="1" parent="1" target="PVdDav53qMYlW7E-gHQP-9">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="100" y="700" as="sourcePoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="PVdDav53qMYlW7E-gHQP-32" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.75;entryY=0;entryDx=0;entryDy=0;strokeColor=light-dark(#000000,#000000);" edge="1" parent="1" target="PVdDav53qMYlW7E-gHQP-31">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="299.9999999999998" y="780" as="sourcePoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="PVdDav53qMYlW7E-gHQP-17" value="&lt;font style=&quot;font-size: 24px; color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;&lt;b&gt;High Level System Architecture&lt;/b&gt;&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="430" y="525" width="390" height="60" as="geometry" />
        </mxCell>
        <mxCell id="PVdDav53qMYlW7E-gHQP-22" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;strokeColor=light-dark(#000000,#000000);" edge="1" parent="1" source="PVdDav53qMYlW7E-gHQP-18" target="PVdDav53qMYlW7E-gHQP-19">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="PVdDav53qMYlW7E-gHQP-18" value="&lt;b&gt;&lt;font style=&quot;font-size: 17px; color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;Data Upload&lt;/font&gt;&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;strokeWidth=2;strokeColor=light-dark(#000000,#000000);fillColor=light-dark(#FFFFFF,#FFFFFF);" vertex="1" parent="1">
          <mxGeometry x="440" y="590" width="360" height="48" as="geometry" />
        </mxCell>
        <mxCell id="PVdDav53qMYlW7E-gHQP-23" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;strokeColor=light-dark(#000000,#000000);" edge="1" parent="1" source="PVdDav53qMYlW7E-gHQP-19" target="PVdDav53qMYlW7E-gHQP-20">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="PVdDav53qMYlW7E-gHQP-19" value="&lt;font style=&quot;font-size: 17px; color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;&lt;b style=&quot;&quot;&gt;Exploratory Data Analysis&lt;/b&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;strokeWidth=2;strokeColor=light-dark(#000000,#000000);fillColor=light-dark(#FFFFFF,#FFFFFF);" vertex="1" parent="1">
          <mxGeometry x="440" y="660" width="360" height="50" as="geometry" />
        </mxCell>
        <mxCell id="PVdDav53qMYlW7E-gHQP-24" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;strokeColor=light-dark(#000000,#090909);" edge="1" parent="1" source="PVdDav53qMYlW7E-gHQP-20" target="PVdDav53qMYlW7E-gHQP-21">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="PVdDav53qMYlW7E-gHQP-20" value="&lt;b&gt;&lt;font style=&quot;font-size: 17px; color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;Model Selection&lt;/font&gt;&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;strokeWidth=2;strokeColor=light-dark(#000000,#000000);fillColor=light-dark(#FFFFFF,#FFFFFF);" vertex="1" parent="1">
          <mxGeometry x="440" y="730" width="360" height="50" as="geometry" />
        </mxCell>
        <mxCell id="PVdDav53qMYlW7E-gHQP-21" value="&lt;font style=&quot;font-size: 17px; color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;&lt;b&gt;Model Training&lt;/b&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;strokeWidth=2;strokeColor=light-dark(#000000,#000000);fillColor=light-dark(#FFFFFF,#FFFFFF);" vertex="1" parent="1">
          <mxGeometry x="440" y="800" width="360" height="50" as="geometry" />
        </mxCell>
        <mxCell id="PVdDav53qMYlW7E-gHQP-25" value="&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;&lt;b style=&quot;&quot;&gt;DIY AutoML Platform is structured around five core modules. Frontend&amp;nbsp;UI enables users to upload CSV data, select target columns, and explore results via automated EDA visualizations. ML&amp;nbsp;Engine implements algorithms from scratch—linear and logistic regression, decision trees, random forests, neural networks (with optional PCA/K‑means)—and computes custom metrics like R², accuracy, and F1‑score. Model Selection Logic uses heuristics based on data types and tasks to recommend optimal models, while Hyperparameter Tuning automates grid or random search. Interpretability Module delivers global feature importance and local sensitivity analyses. Utilities handle model persistence, export predictions to CSV, and deploy with minimal setup.&lt;/b&gt;&lt;/font&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="40" y="860" width="360" height="280" as="geometry" />
        </mxCell>
        <mxCell id="PVdDav53qMYlW7E-gHQP-31" value="&lt;b&gt;&lt;font style=&quot;font-size: 16px; color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;Error Analysis and Hyperparameter Tuning&lt;/font&gt;&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;strokeWidth=2;strokeColor=light-dark(#000000,#000000);fillColor=light-dark(#FFFFFF,#FFFFFF);" vertex="1" parent="1">
          <mxGeometry x="40" y="810" width="340" height="60" as="geometry" />
        </mxCell>
        <mxCell id="PVdDav53qMYlW7E-gHQP-33" value="&lt;b&gt;&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;At the highest level, the DIY AutoML Platform consists of a client‑side interface (React or Streamlit) that communicates via RESTful APIs with a backend server (Flask/FastAPI). The server handles data ingestion and preprocessing, then delegates to the ML Engine, which runs custom linear/logistic regression, decision trees, random forests, and neural networks. A Model Selection service picks appropriate algorithms and hyperparameters, feeding tasks into the Training Pipeline. Trained models and evaluation metrics flow into the Interpretability Module for feature‑importance and sensitivity analyses. All artifacts—models, metrics, and prediction outputs—are stored in a persistent datastore and exposed for download or deployment. Monitoring and logging included.&lt;/font&gt;&lt;/b&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="440" y="870" width="360" height="270" as="geometry" />
        </mxCell>
        <mxCell id="PVdDav53qMYlW7E-gHQP-36" value="&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;font style=&quot;font-size: 14px;&quot;&gt;#&lt;/font&gt;&amp;nbsp;File Upload&lt;/b&gt;&lt;/font&gt;&lt;div&gt;&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;font style=&quot;font-size: 14px;&quot;&gt;#&lt;/font&gt;&amp;nbsp;EDA ad result&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Dashboard&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;strokeWidth=2;strokeColor=light-dark(#000000,#000000);fillColor=light-dark(#FFFFFF,#FFFFFF);align=left;" vertex="1" parent="1">
          <mxGeometry x="40" y="677" width="130" height="79" as="geometry" />
        </mxCell>
        <mxCell id="PVdDav53qMYlW7E-gHQP-37" value="&lt;div&gt;&lt;b&gt;&lt;font style=&quot;font-size: 16px; color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;Model Selection&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0)); text-align: left; background-color: transparent;&quot;&gt;&lt;b&gt;#Linear/Logistic Regression&lt;/b&gt;&lt;/span&gt;&lt;b&gt;&lt;br&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0)); text-align: left; background-color: transparent;&quot;&gt;#Decision Trees&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0)); text-align: left; background-color: transparent;&quot;&gt;&amp;nbsp;#Random Forest&lt;/span&gt;&lt;br&gt;&lt;font style=&quot;text-align: left; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;#Neura&lt;/font&gt;&lt;font style=&quot;text-align: left; background-color: transparent; color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;l&lt;/font&gt;&lt;/b&gt;&lt;span style=&quot;text-align: left; background-color: transparent;&quot;&gt;&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;&lt;b style=&quot;&quot;&gt; &lt;/b&gt;&lt;b&gt;Network&lt;/b&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;strokeWidth=2;strokeColor=light-dark(#000000,#000000);fillColor=light-dark(#FFFFFF,#FFFFFF);" vertex="1" parent="1">
          <mxGeometry x="220" y="671" width="160" height="119" as="geometry" />
        </mxCell>
        <mxCell id="PVdDav53qMYlW7E-gHQP-40" value="&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0)); font-size: 24px;&quot;&gt;&lt;b style=&quot;&quot;&gt;Implementation Details&lt;/b&gt;&lt;/font&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="49.5" y="1220" width="341" height="30" as="geometry" />
        </mxCell>
        <mxCell id="PVdDav53qMYlW7E-gHQP-41" value="&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0)); font-size: 15px;&quot;&gt;&lt;b style=&quot;&quot;&gt;1. Data Ingestion &amp;amp; Preprocessing&lt;/b&gt;&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="49" y="1270" width="247.5" height="30" as="geometry" />
        </mxCell>
        <mxCell id="PVdDav53qMYlW7E-gHQP-43" value="&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(1, 1, 1)); font-size: 15px;&quot;&gt;&lt;b&gt;i. CSV Loader&lt;/b&gt;&lt;/font&gt;&lt;div&gt;&lt;font style=&quot;&quot;&gt;&lt;b style=&quot;color: light-dark(rgb(0, 0, 0), rgb(1, 1, 1)); font-size: 15px;&quot;&gt;&amp;nbsp; &amp;nbsp; #&amp;nbsp;&lt;/b&gt;&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;&lt;b&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;Uses&amp;nbsp;Pandas&amp;nbsp;to read user‑uploaded files (&lt;/span&gt;&lt;code style=&quot;background-color: transparent;&quot; data-end=&quot;294&quot; data-start=&quot;281&quot;&gt;pd.read_csv&lt;/code&gt;&lt;/b&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;b&gt;).&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;b style=&quot;color: light-dark(rgb(0, 0, 0), rgb(1, 1, 1)); font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;&quot;&gt;&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;font style=&quot;font-size: 15px;&quot;&gt;#&amp;nbsp;&lt;/font&gt;&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;b style=&quot;&quot;&gt;&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(9, 9, 9));&quot;&gt;Validates schema: checks for missing headers, enforces &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;a minimum row count.&lt;/font&gt;&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;b style=&quot;&quot;&gt;&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(9, 9, 9));&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 14px; color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;&lt;b style=&quot;&quot;&gt;ii. Data Cleaning&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 14px; color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;&lt;b style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; #&amp;nbsp;&lt;/b&gt;&lt;/font&gt;&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;&lt;strong style=&quot;background-color: transparent;&quot; data-end=&quot;428&quot; data-start=&quot;410&quot;&gt;Missing values&lt;/strong&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;: options to drop rows or impute (mean/median &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;for numeric, mode for categorical).&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;font&gt;&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/font&gt;&lt;font style=&quot;font-size: 15px; color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;&lt;b style=&quot;&quot;&gt;#&lt;/b&gt;&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;&lt;b&gt;&amp;nbsp;&lt;/b&gt;&lt;/font&gt;&lt;/span&gt;&lt;/font&gt;&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;&lt;span style=&quot;font-weight: bold; background-color: transparent;&quot; data-end=&quot;535&quot; data-start=&quot;517&quot;&gt;Type inference&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;b&gt;: &lt;/b&gt;auto‑detect numeric vs. categorical via &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;code style=&quot;background-color: transparent;&quot; data-end=&quot;588&quot; data-start=&quot;577&quot;&gt;df.dtypes&lt;/code&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;; allow manual overrides.&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;font style=&quot;font-size: 15px;&quot;&gt;&lt;b&gt;#&lt;/b&gt;&lt;/font&gt; &lt;b&gt;Encoding:&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(237, 237, 237)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;color: light-dark(rgb(0, 0, 0), rgb(237, 237, 237)); white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;#&amp;nbsp;&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;Label‑encode small-cardinality categorical.&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(0, 0, 0); background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;#&amp;nbsp;&lt;/font&gt;&lt;/span&gt;&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;One‑hot encode larger sets via &lt;/span&gt;&lt;code style=&quot;background-color: transparent;&quot; data-end=&quot;745&quot; data-start=&quot;729&quot;&gt;pd.get_dummies&lt;/code&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;.&lt;/span&gt;&lt;/font&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font&gt;&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font&gt;&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0)); font-size: 14px;&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;b&gt;iii. Train/Test Split&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font&gt;&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0)); font-size: 14px;&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;#&amp;nbsp;&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;&lt;b&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;Default 80/20 split using a random seed for reproducibility &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;(&lt;/span&gt;&lt;code style=&quot;background-color: transparent;&quot; data-end=&quot;864&quot; data-start=&quot;841&quot;&gt;np.random.permutation&lt;/code&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;).&lt;/span&gt;&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;&lt;b&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; #&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;/font&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;b style=&quot;&quot;&gt;&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;Stratification for classification tasks (preserve class &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;ratios).&lt;/font&gt;&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;&quot;&gt;&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;b&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp;&lt;br&gt;&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="49.5" y="1297" width="364.5" height="327" as="geometry" />
        </mxCell>
        <mxCell id="PVdDav53qMYlW7E-gHQP-44" value="&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(1, 1, 1)); font-size: 15px;&quot;&gt;&lt;b&gt;i.&amp;nbsp;&lt;/b&gt;&lt;/font&gt;&lt;font style=&quot;color: light-dark(rgb(1, 1, 1), rgb(0, 0, 0));&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;b style=&quot;&quot;&gt;Univariate Analysis&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;div&gt;&lt;font style=&quot;&quot;&gt;&lt;b style=&quot;color: light-dark(rgb(0, 0, 0), rgb(1, 1, 1)); font-size: 15px;&quot;&gt;&amp;nbsp; &amp;nbsp; #&lt;/b&gt;&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;&lt;b style=&quot;font-size: 15px;&quot;&gt;&amp;nbsp;&lt;/b&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;font&gt;&lt;b style=&quot;&quot;&gt;Histograms and boxplots (Matplotlib) for distributions and &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;outliers.&lt;/b&gt;&lt;/font&gt;&lt;/span&gt;&lt;/font&gt;&lt;b style=&quot;color: light-dark(rgb(0, 0, 0), rgb(1, 1, 1)); font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;&quot;&gt;&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;font style=&quot;font-size: 15px;&quot;&gt;#&amp;nbsp;&lt;/font&gt;&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;font style=&quot;color: light-dark(rgb(9, 9, 9), rgb(0, 0, 0));&quot;&gt;&lt;b style=&quot;&quot;&gt;Summary table (mean, median, std, missing %) generated &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;with df.describe() augmented by custom Pandas &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;aggregations.&lt;/b&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;b style=&quot;&quot;&gt;&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(9, 9, 9));&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;font-size: 14px; color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;&lt;b style=&quot;&quot;&gt;ii.&amp;nbsp;&lt;/b&gt;&lt;/font&gt;&lt;span style=&quot;background-color: transparent; font-size: 14px;&quot;&gt;&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;&lt;b style=&quot;&quot;&gt;Bivariate Analysis&lt;/b&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;&lt;font style=&quot;font-size: 14px;&quot;&gt;&lt;b style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; #&amp;nbsp;&lt;/b&gt;&lt;/font&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;font&gt;&lt;b&gt;Correlation matrix heatmap (df.corr() → plt.imshow).&lt;/b&gt;&lt;/font&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;&lt;font&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;font&gt;&lt;font style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/font&gt;&lt;font style=&quot;font-size: 15px;&quot;&gt;&lt;b style=&quot;&quot;&gt;#&lt;/b&gt;&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;&quot;&gt;&lt;b&gt;&amp;nbsp;&lt;/b&gt;&lt;/font&gt;&lt;/span&gt;&lt;/font&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;font&gt;&lt;b&gt;Scatter plots of top correlated features vs. target.&lt;/b&gt;&lt;/font&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font&gt;&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;&lt;font&gt;&lt;font style=&quot;font-size: 14px;&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;b&gt;iii.&amp;nbsp;&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;span style=&quot;background-color: transparent; font-size: 14px;&quot;&gt;&lt;font&gt;&lt;b&gt;Automated Report&lt;/b&gt;&lt;/font&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;&lt;font&gt;&lt;font style=&quot;font-size: 14px;&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;#&amp;nbsp;&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;font&gt;&lt;b&gt;Jinja2 template (backend) renders an HTML snippet of &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;figures and tables.&lt;/b&gt;&lt;/font&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;&lt;font style=&quot;&quot;&gt;&lt;b&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; #&amp;nbsp;&lt;/span&gt;&lt;/b&gt;&lt;/font&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;font&gt;&lt;b&gt;Frontend displays these via an embedded iframe or React &lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;component.&lt;/b&gt;&lt;/font&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;font style=&quot;&quot;&gt;&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;b&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;nbsp;&lt;br&gt;&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="49.5" y="1642" width="364.5" height="291" as="geometry" />
        </mxCell>
        <mxCell id="PVdDav53qMYlW7E-gHQP-45" value="&lt;b&gt;&lt;font style=&quot;font-size: 15px; color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;2. Exploratory Data Analysis (EDA)&lt;/font&gt;&lt;/b&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="49" y="1612" width="293.5" height="30" as="geometry" />
        </mxCell>
        <mxCell id="PVdDav53qMYlW7E-gHQP-46" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=1;exitDx=0;exitDy=0;" edge="1" parent="1" source="PVdDav53qMYlW7E-gHQP-45" target="PVdDav53qMYlW7E-gHQP-45">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="PVdDav53qMYlW7E-gHQP-47" value="&lt;font style=&quot;color: light-dark(rgb(0, 0, 0), rgb(0, 0, 0));&quot;&gt;&lt;font style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;b style=&quot;&quot;&gt;3.&amp;nbsp;&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;font&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;b style=&quot;&quot;&gt;Model Selection &amp;amp; Hyperparameter Tuning&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;" style="text;html=1;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="49.5" y="1922" width="333.5" height="30" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
